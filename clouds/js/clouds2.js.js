// Generated by CoffeeScript 1.4.0
(function() {
  var Clouds;

  Clouds = (function() {

    Clouds.prototype.createCloud = function() {
      var a, cloud, div, j, r, s, src, t, x, y, z, _i, _ref;
      div = document.createElement('div');
      div.className = 'cloudBase';
      x = 256 - (Math.random() * 512);
      y = 256 - (Math.random() * 512);
      z = 256 - (Math.random() * 512);
      t = 'translateX( ' + x + 'px ) translateY( ' + y + 'px ) translateZ( ' + z + 'px )';
      div.style.webkitTransform = t;
      div.style.MozTransform = t;
      div.style.oTransform = t;
      world.appendChild(div);
      for (j = _i = 0, _ref = 5 + Math.round(Math.random() * 10); 0 <= _ref ? _i < _ref : _i > _ref; j = 0 <= _ref ? ++_i : --_i) {
        cloud = document.createElement('img');
        cloud.style.opacity = 0;
        r = Math.random();
        src = 'cloud.png';
        cloud = addEventListener('load', function() {
          return img.style.opacity = .8;
        });
        cloud.setAttribute('src', src);
        cloud.className = 'cloudLayer';
        x = 256 - (Math.random() * 512);
        y = 256 - (Math.random() * 512);
        z = 100 - (Math.random() * 200);
        a = Math.random() * 360;
        s = .25 + Math.random();
        x *= .2;
        y *= .2;
        cloud.data = {
          x: x,
          y: y,
          z: z,
          a: a,
          s: s,
          speed: .1 * Math.random()
        };
        t = 'translateX( ' + x + 'px ) translateY( ' + y + 'px ) translateZ( ' + z + 'px ) rotateZ( ' + a + 'deg ) scale( ' + s + ' )';
        cloud.style.webkitTransform = t;
        cloud.style.MozTransform = t;
        cloud.style.oTransform = t;
        div.appendChild(cloud);
        layers.push(cloud);
      }
      return div;
    };

    Clouds.prototype.generate = function() {
      var j, objects, _i, _results;
      objects = [];
      if (world.hasChildNodes()) {
        while (world.childNodes.length >= 1) {
          world.removeChild(world.firstChild);
        }
      }
      _results = [];
      for (j = _i = 0; _i < 5; j = ++_i) {
        _results.push(objects.push(createCloud()));
      }
      return _results;
    };

    function Clouds() {
      var d, lastTime, layers, objects, p, vendors, viewport, world, worldXAngle, worldYAngle, x, _i, _ref;
      lastTime = 0;
      vendors = ['ms', 'moz', 'webkit', 'o'];
      if (!window.requestAnimationFrame) {
        for (x = _i = 0, _ref = vendors.length; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {
          window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
          window.cancelRequestAnimationFrame = window[vendors[x] + 'CancelRequestAnimationFrame'];
        }
      }
      if (!window.requestAnimationFrame) {
        window.requestAnimationFrame = function(callback, element) {
          var currTime, id, timeToCall;
          currTime = new Date().getTime();
          timeToCall = Math.max(0, 16 - (currTime - lastTime));
          id = window.setTimeout(callback(currTime + timeToCall), timeToCall);
          lastTime = currTime + timeToCall;
          return id;
        };
      }
      if (!window.cancelAnimationFrame) {
        window.cancelAnimationFrame = function(id) {
          return clearTimeout(id);
        };
      }
      layers = [];
      objects = [];
      world = document.getElementById('world');
      viewport = document.getElementById('viewport');
      d = 0;
      p = 400;
      worldXAngle = 0;
      worldYAngle = 0;
      viewport.style.webkitPerspective = p;
      viewport.style.MozPerspective = p;
      viewport.style.oPerspective = p;
      this.generate();
      window.addEventListener('mousewheel', onContainerMouseWheel);
      window.addEventListener('DOMMouseScroll', onContainerMouseWheel);
      window.addEventListener('mousemove', function(e) {
        worldYAngle = -(.5 - (e.clientX / window.innerWidth)) * 180;
        worldXAngle = (.5 - (e.clientY / window.innerHeight)) * 180;
        return updateView();
      });
      update();
    }

    Clouds.prototype.updateView = function() {
      var t;
      t = 'translateZ( ' + d + 'px ) rotateX( ' + worldXAngle + 'deg) rotateY( ' + worldYAngle + 'deg)';
      world.style.webkitTransform = t;
      world.style.MozTransform = t;
      return world.style.oTransform = t;
    };

    Clouds.prototype.onContainerMouseWheel = function(event) {
      var d, _ref;
      event = event != null ? event : {
        event: window.event
      };
      d = d - ((_ref = event.detail) != null ? _ref : event.detail * -{
        5: event.wheelDelta / 8
      });
      return updateView();
    };

    Clouds.prototype.update = function() {
      var j, layer, t, _i, _ref;
      for (j = _i = 0, _ref = layers.length; 0 <= _ref ? _i < _ref : _i > _ref; j = 0 <= _ref ? ++_i : --_i) {
        layer = layers[j];
        layer.data.a += layer.data.speed;
        t = 'translateX( ' + layer.data.x + 'px ) translateY( ' + layer.data.y + 'px ) translateZ( ' + layer.data.z + 'px ) rotateY( ' + (-worldYAngle) + 'deg ) rotateX( ' + (-worldXAngle) + 'deg ) rotateZ( ' + layer.data.a + 'deg ) scale( ' + layer.data.s + ')';
        layer.style.webkitTransform = t;
        layer.style.MozTransform = t;
        layer.style.oTransform = t;
      }
      return requestAnimationFrame(update);
    };

    return Clouds;

  })();

  $(function() {
    return new Clouds();
  });

}).call(this);
